{"version":3,"file":"static/js/753.0fc5db1a.chunk.js","mappings":"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","sources":["components/help/scoreBar.jsx","webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","components/help/convertTime.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const ScoreBar = ({ score }) => {\n  const percent = (score * 360) / 100;\n\n  return (\n    <div style={{ paddingTop: '20px' }}>\n      <span\n        style={{\n          background: `conic-gradient(rgb(0, 122, 255) ${percent}deg, #c8c5c59e 0deg)`,\n        }}\n      >\n        <span>{`${score}%`}</span>\n      </span>\n    </div>\n  );\n};\n\nexport default ScoreBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieContainer2\":\"MovieCard_movieContainer2__Fdtl1\",\"cardInfo\":\"MovieCard_cardInfo__M6fmj\",\"contOther\":\"MovieCard_contOther__wC89b\",\"contOwerview\":\"MovieCard_contOwerview__IpVpH\"};","import { convertDate } from 'components/help/convertDate';\nimport { convertTime } from 'components/help/convertTime';\nimport React from 'react';\nimport placeholder from '../../img/image.webp';\nimport ScoreBar from 'components/help/scoreBar';\nimport css from './MovieCard.module.css';\n\nfunction MovieCard({ movie }) {\n  const {\n    poster_path,\n    backdrop_path,\n    title,\n    overview,\n    genres,\n    vote_average,\n    release_date,\n    runtime = 0,\n    tagline,\n    homepage,\n  } = movie;\n\n  const backdrop = backdrop_path\n    ? `linear-gradient(rgba(47,48,58,0.8), rgba(47,48,58,0.8)), url(https://image.tmdb.org/t/p/original/${backdrop_path})`\n    : 'linear-gradient(rgba(47,48,58,0.8), rgba(47,48,58,0.8))';\n\n  const genresList =\n    genres.length > 0\n      ? genres.map(genre => genre.name).join(', ')\n      : 'No genres provided';\n\n  const formattedYear = release_date ? `(${release_date.split('-')[0]})` : '';\n  const formattedDate = convertDate(release_date);\n\n  const movieOverview = overview ? overview : 'No overviews yet...';\n  const filmDuration = convertTime(runtime);\n  const score = vote_average ? Math.round((vote_average / 10) * 100) : 0;\n  return (\n    <div\n      className={css.movieContainer}\n      style={{\n        backgroundImage: backdrop,\n        backgroundSize: 'cover',\n      }}\n    >\n      <div className={css.movieContainer2}>\n        <div className={css.imgContainer}>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                : `${placeholder}`\n            }\n            alt={title}\n            width=\"250\"\n            className={css.imgSetup}\n          />\n        </div>\n        <div className={css.cardInfo}>\n          <div className={css.cardInfo2}>\n            <h2 className={css.cardTitle}>\n              {title}&nbsp;\n              {formattedYear}\n            </h2>\n            {homepage && (\n              <a\n                className={css.cardLink}\n                href={homepage}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                title=\"Go to the official website\"\n              >\n                Go to the official website\n              </a>\n            )}\n          </div>\n          {tagline && <i>{tagline}</i>}\n          <div className={css.contOther}>\n            {release_date && (\n              <span className={css.formData}>{formattedDate} &#183; </span>\n            )}\n            {genresList && <span className={css.genrlist}> {genresList}</span>}\n            {runtime > 0 && (\n              <span className={css.filmDut}> &#183; {filmDuration}</span>\n            )}\n          </div>\n          <ScoreBar score={score} />\n          <div className={css.contOwerview}>\n            <span className={css.overview}>Overview</span>\n            <p className={css.iOwerview}>{movieOverview}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieCard;\n","export function convertTime(time) {\n  const hours = Math.floor(time / 60);\n  const mins = Math.round(time % 60);\n\n  return `${hours}h ${mins}min`;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"goBack\":\"MovieDetails_goBack__C8OKE\",\"moveiDetailsCont\":\"MovieDetails_moveiDetailsCont__abN9J\",\"moveiDetailsTitle\":\"MovieDetails_moveiDetailsTitle__ukAVg\",\"moveiDetailsItem\":\"MovieDetails_moveiDetailsItem__YB8-N\",\"moveiDetailsList\":\"MovieDetails_moveiDetailsList__Spb+Z\"};","import Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport Notiflix from 'notiflix';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/movies-api';\nimport css from './MovieDetails.module.css';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const location = useLocation();\n  const backLinkRef = useRef(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    const fetchMovieDetails = async movieId => {\n      try {\n        setIsLoading(true);\n\n        const fetchedMovieDetails = await getMovieDetails(movieId, signal);\n        setMovie(fetchedMovieDetails);\n        Notiflix.Notify.success('Movie ist load....enjoy))');\n      } catch (error) {\n        if (error.code !== 'ERR_CANCELED') setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieDetails(movieId);\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error &&\n        Notiflix.Notify.failure(\n          'Oops, something went wrong...Try again later!'\n        )}\n\n      <div className={css.goBack}>\n        <Link to={backLinkRef.current}>Go back</Link>\n      </div>\n\n      {movie && (\n        <>\n          <MovieCard movie={movie} />\n\n          <div className={css.moveiDetailsCont}>\n            <h3 className={css.moveiDetailsTitle}>Additional Information</h3>\n            <ul className={css.moveiDetailsItem}>\n              <li className={css.moveiDetailsList}>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li className={css.moveiDetailsList}>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n            <Outlet />\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["score","percent","style","paddingTop","background","movie","poster_path","backdrop_path","title","overview","genres","vote_average","release_date","runtime","tagline","homepage","backdrop","genresList","length","map","genre","name","join","formattedYear","split","formattedDate","convertDate","movieOverview","filmDuration","time","hours","Math","floor","mins","round","convertTime","className","css","backgroundImage","backgroundSize","src","placeholder","alt","width","href","target","rel","MovieDetails","movieId","useParams","useState","setMovie","isLoading","setIsLoading","error","setError","location","useLocation","backLinkRef","useRef","state","from","useEffect","controller","AbortController","signal","fetchMovieDetails","getMovieDetails","fetchedMovieDetails","Notiflix","code","abort","Loader","to","current"],"sourceRoot":""}